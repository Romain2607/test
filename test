<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <title>Démo Vérin Hydraulique</title>
  <style>
    body { margin: 0; background: #222; color: white; font-family: sans-serif; }
    canvas { display: block; }
    #info {
      position: absolute;
      top: 10px;
      left: 10px;
      background: rgba(0,0,0,0.7);
      padding: 10px;
      border-radius: 8px;
    }
    input[type="range"] {
      width: 200px;
    }
  </style>
</head>
<body>
  <div id="info">
    <label>Course du piston :
      <input type="range" id="slider" min="0" max="100" value="50">
    </label><br>
    Volume fond : <span id="volFond">-</span> cm³<br>
    Volume tige : <span id="volTige">-</span> cm³
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r148/three.min.js"></script>

  <script>
    const radiusCyl = 2;
    const radiusRod = 1;
    const maxCourse = 10;

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 100);
    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);

    const light = new THREE.PointLight(0xffffff, 1);
    light.position.set(10, 10, 10);
    scene.add(light);

    const cylLength = maxCourse + 5;
    const cylGeometry = new THREE.CylinderGeometry(radiusCyl, radiusCyl, cylLength, 32);
    const cylMaterial = new THREE.MeshStandardMaterial({ color: 0x5555ff, transparent: true, opacity: 0.4 });
    const cyl = new THREE.Mesh(cylGeometry, cylMaterial);
    cyl.rotation.z = Math.PI / 2;
    scene.add(cyl);

    const rodGeometry = new THREE.CylinderGeometry(radiusRod, radiusRod, 10, 32);
    const rodMaterial = new THREE.MeshStandardMaterial({ color: 0xaaaaaa });
    const rod = new THREE.Mesh(rodGeometry, rodMaterial);
    rod.rotation.z = Math.PI / 2;
    rod.position.x = maxCourse / 2 + 2.5;
    scene.add(rod);

    const pistonGeometry = new THREE.CylinderGeometry(radiusCyl, radiusCyl, 0.5, 32);
    const pistonMaterial = new THREE.MeshStandardMaterial({ color: 0xff0000 });
    const piston = new THREE.Mesh(pistonGeometry, pistonMaterial);
    piston.rotation.z = Math.PI / 2;
    scene.add(piston);

    camera.position.z = 20;

    const slider = document.getElementById("slider");
    const volFondEl = document.getElementById("volFond");
    const volTigeEl = document.getElementById("volTige");

    function updatePiston(coursePercent) {
      const course = (coursePercent / 100) * maxCourse;
      piston.position.x = course - (maxCourse / 2);
      rod.position.x = course + 5;

      const volFond = Math.PI * Math.pow(radiusCyl, 2) * course;
      const volTige = Math.PI * (Math.pow(radiusCyl, 2) - Math.pow(radiusRod, 2)) * (maxCourse - course);

      volFondEl.textContent = volFond.toFixed(2);
      volTigeEl.textContent = volTige.toFixed(2);
    }

    slider.addEventListener("input", () => {
      updatePiston(slider.value);
    });

    updatePiston(slider.value);

    function animate() {
      requestAnimationFrame(animate);
      renderer.render(scene, camera);
    }

    animate();
  </script>
</body>
</html>
